class Solution {
public:
//这道题有一个很重要的知识点，那就是实际上每个子数组中的值异或后，变为0，因为最终每一个二进制位上的数字数量都是偶数对
//当然也可以变为二进制来做，但是这样就非常的麻烦，所以我们直接使用异或
    long long beautifulSubarrays(vector<int>& nums) {
        unordered_map<int,int> map={{0,1}};
        long long ans=0;
        int sum=0;
        for(int i=0;i<nums.size();i++){
            sum=sum^nums[i];
            if(map.contains(sum)) ans+=map[sum];
            map[sum]++;
        }
        return ans;
    }
};
